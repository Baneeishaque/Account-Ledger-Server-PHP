name: Database Backup from Server via. mysqldump

on:
  schedule:
    # 00:00 IST, 06:00 IST, 12:00 IST, 18:00 IST
    - cron: "30 18,0,6,12 * * *"
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update package repository
        run: sudo apt-get update

      - name: Install MySQL client
        run: sudo apt-get install -y mysql-client

      - name: Backup database from ${{ secrets.SERVER_NAME }} via. mysqldump
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          SERVER_NAME: ${{ secrets.SERVER_NAME }}
        run: |
          mkdir -p db_backups
          BACKUP_FILE="db_backups/${SERVER_NAME}-${DB_USER}-${DB_NAME}.sql"
          mysqldump --column-statistics=0 -h $DB_HOST -u $DB_USER -p"$DB_PASSWORD" $DB_NAME > "$BACKUP_FILE"
          sed -i 's/),(/),\n(/g' "$BACKUP_FILE"

      - name: Configure Git
        uses: fregante/setup-git-user@v2.0.2

      - name: Check for Changes
        id: check_changes
        run: |
          DB_FILE=$(ls -t db_backups/*.sql | head -n 1)

          DIFF_OUTPUT=$(git diff -- "$DB_FILE")

          # Process the diff output to remove irrelevant lines
          CLEANED_DIFF=$(echo "$DIFF_OUTPUT" | sed -E '
              /^diff --/d;                          # Remove diff metadata lines
              /^index /d;                           # Remove index lines
              /^--- a/d;                            # Remove old file path
              /^\+\+\+ b/d;                         # Remove new file path
              /^@@ /d;                              # Remove hunk headers
              /^[[:space:]]*\/\*!/d;                # Remove comments starting with /*! 
              /^[+-]-- Dump completed on/d;         # Remove added or removed "Dump completed on" lines
              /^[[:space:]]*$/d                     # Remove blank or whitespace-only lines
          ')

          # Check if the cleaned diff output is empty or contains meaningful changes
          if [ -z "$CLEANED_DIFF" ]; then
              echo "No meaningful changes detected."
              echo "changed=false" >> "$GITHUB_ENV"
          else
              echo "There are meaningful database changes."
              echo "changed=true" >> "$GITHUB_ENV"
          fi

      - name: Add and Commit Changes
        if: env.changed == 'true'
        env:
          SERVER_NAME: ${{ secrets.SERVER_NAME }}
        run: |
          DB_FILE=$(ls -t db_backups/*.sql | head -n 1)
          git add $DB_FILE
          DB_TIMESTAMP=$(TZ='Asia/Kolkata' date -r $DB_FILE "+%d-%m-%Y %H-%M-%S IST")
          git commit -m "Added DB Backup file $(basename $DB_FILE) from ${SERVER_NAME} On ${DB_TIMESTAMP}"

      - name: Push Changes to Master
        if: env.changed == 'true'
        uses: ad-m/github-push-action@v0.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master
